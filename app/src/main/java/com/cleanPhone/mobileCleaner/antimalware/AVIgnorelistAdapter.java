package com.cleanPhone.mobileCleaner.antimalware;

import android.content.Context;
import android.content.pm.PackageManager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;

import com.cleanPhone.mobileCleaner.R;
import com.cleanPhone.mobileCleaner.utility.GlobalData;

import java.util.ArrayList;

public class AVIgnorelistAdapter extends ArrayAdapter<FilesInclude> {
    public AVIgnorelist f4787a;
    private ArrayList<FilesInclude> modelList;
    private final PackageManager packageManager;

    public AVIgnorelistAdapter(Context context, ArrayList<FilesInclude> arrayList) {
        super(context, (int) R.layout.whitelist_item, arrayList);
        this.f4787a = (AVIgnorelist) context;
        this.modelList = arrayList;
        this.packageManager = context.getPackageManager();
    }

    @Override
    public int getCount() {
        return this.modelList.size();
    }

    @Override
    @NonNull
    public View getView(final int i, View view, @NonNull ViewGroup viewGroup) {
        LayoutInflater layoutInflater = (LayoutInflater) this.f4787a.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View inflate = layoutInflater != null ? layoutInflater.inflate(R.layout.whitelist_item, (ViewGroup) null, true) : null;
        final FilesInclude filesInclude = this.modelList.get(i);
        TextView textView = inflate != null ? (TextView) inflate.findViewById(R.id.name) : null;
        ImageView imageView = inflate != null ? (ImageView) inflate.findViewById(R.id.img) : null;
        ImageView imageView2 = inflate != null ? (ImageView) inflate.findViewById(R.id.ignore) : null;
        if (textView != null) {
            try {
                if (filesInclude.isApk()) {
                    textView.setText(this.packageManager.getApplicationInfo(filesInclude.getPkgName(), 0).loadLabel(this.packageManager));
                } else {
                    textView.setText(filesInclude.getName());
                }
            } catch (PackageManager.NameNotFoundException e) {
                e.printStackTrace();
            }
        }
        if (imageView != null) {
            try {
                imageView.setImageDrawable(this.f4787a.getPackageManager().getApplicationIcon(filesInclude.getPkgName()));
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        if (imageView2 != null) {
            imageView2.setOnClickListener(new View.OnClickListener() {
                private void removeFromAVIgnoreList(String str) {
                    ArrayList arrayList;
                    try {
                        arrayList = (ArrayList) GlobalData.getObj(AVIgnorelistAdapter.this.f4787a, "av_white");
                        for (int i2 = 0; i2 < arrayList.size(); i2++) {
                            if (((FilesInclude) arrayList.get(i2)).getPkgName().equalsIgnoreCase(str)) {
                                arrayList.remove(i2);
                                break;
                            }
                        }
                    } catch (Exception e3) {
                        e3.printStackTrace();
                        arrayList = new ArrayList();
                    }
                    try {
                        GlobalData.saveObj(AVIgnorelistAdapter.this.f4787a, "av_white", arrayList);
                    } catch (Exception e4) {
                        e4.printStackTrace();
                    }
                }

                @Override
                public void onClick(View view2) {
                    if (AVIgnorelistAdapter.this.f4787a.multipleClicked()) {
                        return;
                    }
                    removeFromAVIgnoreList(filesInclude.getPkgName());
                    AVIgnorelistAdapter.this.modelList.remove(i);
                    AVIgnorelistAdapter.this.notifyDataSetChanged();
                    try {
                        ((TextView) AVIgnorelistAdapter.this.f4787a.findViewById(R.id.toolbar_title)).setText("" + AVIgnorelistAdapter.this.f4787a.getString(R.string.mbc_whitelist) + " (" + AVIgnorelistAdapter.this.modelList.size() + ")");
                    } catch (Exception e3) {
                        e3.printStackTrace();
                    }
                }
            });
        }
        return inflate;
    }
}
