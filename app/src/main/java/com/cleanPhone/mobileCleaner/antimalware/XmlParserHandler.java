package com.cleanPhone.mobileCleaner.antimalware;

import com.cleanPhone.mobileCleaner.MobiClean;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import java.util.ArrayList;
import java.util.Stack;


public class XmlParserHandler extends DefaultHandler {
    private ArrayList dataList = new ArrayList();
    private Stack elementStack = new Stack();
    private Stack objectStack = new Stack();

    private String currentElement() {
        return (String) this.elementStack.peek();
    }

    @Override
    public void characters(char[] cArr, int i, int i2) throws SAXException {
        String trim = new String(cArr, i, i2).trim();
        if (trim.length() == 0) {
            return;
        }
        if ("UpdateType".equals(currentElement())) {
            ((DBXMLData) this.objectStack.peek()).setUpdateType(trim);
            MobiClean.getInstance().dbxmlData.setUpdateType(trim);
        } else if ("Version".equals(currentElement())) {
            ((DBXMLData) this.objectStack.peek()).setVersion(trim);
            MobiClean.getInstance().dbxmlData.setVersion(trim);
        } else if ("FileName".equals(currentElement())) {
            ((DBXMLData) this.objectStack.peek()).setFileName(trim);
            MobiClean.getInstance().dbxmlData.setFileName(trim);
        } else if ("Hash".equals(currentElement())) {
            ((DBXMLData) this.objectStack.peek()).setHash(trim);
            MobiClean.getInstance().dbxmlData.setHash(trim);
        } else if ("DownloadURL".equals(currentElement())) {
            ((DBXMLData) this.objectStack.peek()).setDownloadURL(trim);
            MobiClean.getInstance().dbxmlData.setDownloadURL(trim);
        } else if ("Size".equals(currentElement())) {
            ((DBXMLData) this.objectStack.peek()).setSize(trim);
            MobiClean.getInstance().dbxmlData.setSize(trim);
        }
    }

    @Override
    public void endDocument() throws SAXException {
    }

    @Override
    public void endElement(String str, String str2, String str3) throws SAXException {
        this.elementStack.pop();
        if ("Update".equals(str3)) {
            this.dataList.add((DBXMLData) this.objectStack.pop());
        }
    }

    public ArrayList getData() {
        return this.dataList;
    }

    @Override
    public void startDocument() throws SAXException {
    }

    @Override
    public void startElement(String str, String str2, String str3, Attributes attributes) throws SAXException {
        this.elementStack.push(str3);
        if ("Update".equals(str3)) {
            this.objectStack.push(new DBXMLData());
        }
    }
}
