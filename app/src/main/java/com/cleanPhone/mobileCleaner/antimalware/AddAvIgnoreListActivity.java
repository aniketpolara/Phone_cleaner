package com.cleanPhone.mobileCleaner.antimalware;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;

import androidx.appcompat.app.AlertDialog;
import androidx.recyclerview.widget.DividerItemDecoration;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.cleanPhone.mobileCleaner.ParentActivity;
import com.cleanPhone.mobileCleaner.R;
import com.cleanPhone.mobileCleaner.wrappers.AppDetails;
import com.cleanPhone.mobileCleaner.wrappers.PackageInfoStruct;

import java.util.ArrayList;

public class AddAvIgnoreListActivity extends ParentActivity {
    private AVWhiteListAdapterView mAdapter;
    private LinearLayoutManager mLayoutManager;
    private RecyclerView mediaNameRecyclerView;
    private ProgressDialog progressDialog;

    @SuppressLint("StaticFieldLeak")
    @Override
    public void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.activity_avignore_list_screen);
        this.progressDialog = ProgressDialog.show(this, "", getString(R.string.mbc_loading));

        new AsyncTask<String, String, ArrayList<PackageInfoStruct>>() {
            @Override
            public void onPreExecute() {
                super.onPreExecute();
                AddAvIgnoreListActivity.this.progressDialog.show();
            }

            @Override
            public ArrayList<PackageInfoStruct> doInBackground(String... strArr) {
                return new AppDetails(AddAvIgnoreListActivity.this).getAVIgnoredApps(AddAvIgnoreListActivity.this);
            }

            @Override
            public void onPostExecute(ArrayList<PackageInfoStruct> arrayList) {
                super.onPostExecute(arrayList);
                try {
                    AddAvIgnoreListActivity addAvIgnoreListActivity = AddAvIgnoreListActivity.this;
                    addAvIgnoreListActivity.mAdapter = new AVWhiteListAdapterView(addAvIgnoreListActivity, arrayList);
                    AddAvIgnoreListActivity addAvIgnoreListActivity2 = AddAvIgnoreListActivity.this;
                    addAvIgnoreListActivity2.mLayoutManager = new LinearLayoutManager(addAvIgnoreListActivity2.getApplicationContext());
                    AddAvIgnoreListActivity addAvIgnoreListActivity3 = AddAvIgnoreListActivity.this;
                    addAvIgnoreListActivity3.mediaNameRecyclerView = (RecyclerView) addAvIgnoreListActivity3.findViewById(R.id.recycler_view);
                    AddAvIgnoreListActivity.this.mediaNameRecyclerView.setLayoutManager(AddAvIgnoreListActivity.this.mLayoutManager);
                    AddAvIgnoreListActivity.this.mediaNameRecyclerView.setAdapter(AddAvIgnoreListActivity.this.mAdapter);
                    AddAvIgnoreListActivity.this.mediaNameRecyclerView.addItemDecoration(new DividerItemDecoration(AddAvIgnoreListActivity.this.mediaNameRecyclerView.getContext(), 1));
                    if (AddAvIgnoreListActivity.this.progressDialog == null || !AddAvIgnoreListActivity.this.progressDialog.isShowing()) {
                        return;
                    }
                    AddAvIgnoreListActivity.this.progressDialog.dismiss();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }.execute(new String[0]);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.ignore, menu);
        try {
            menu.findItem(R.id.already_purchased).setVisible(false);
            return true;
        } catch (Exception e) {
            e.printStackTrace();
            return true;
        }
    }

    @SuppressLint("ResourceType")
    @Override
    public boolean onOptionsItemSelected(MenuItem menuItem) {
        if (menuItem.getItemId() == R.id.already_purchased) {
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setMessage("" + getString(R.string.exclude_any_of_installed) + "" + getString(R.string.options_of_the_app));
            builder.setPositiveButton(getString(17039370), new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialogInterface, int i) {
                    dialogInterface.dismiss();
                }
            });
            builder.show();
            return true;
        }
        finish();
        return super.onOptionsItemSelected(menuItem);
    }
}
